allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    version = '1.0.0'

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    repositories{
        mavenCentral()
        flatDir() {
            dirs "$rootProject.projectDir/modules/DataStore/libs/summit/java"
        }
    }

    dependencies {
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.7'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.7'

        compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.7'

        // https://mvnrepository.com/artifact/junit/junit
        testCompile group: 'junit', name: 'junit', version: '4.12'
        // https://mvnrepository.com/artifact/org.mockito/mockito-all
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        // https://mvnrepository.com/artifact/org.springframework/spring-test
        //testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.7.RELEASE'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
        //compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.1.RELEASE'

    }
}

configure(subprojects.findAll {it.name != 'NoFIlterForNow'}) {
    jar {
        from sourceSets.main.allJava
        manifest {
            attributes 'Title': 'GMS VAAS integration',
                    'provider': 'GMS',
                    'Version': version

        }
    }

    uploadArchives {
        repositories {
            flatDir {
                dirs 'target'
            }
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

task deployGMSInt(type: Zip) {
//    dependsOn artifacts.gmsDataStore
    from 'src/dist'
    into('libs') {
//        from gmsDataStore.archivePath
//        from configurations.runtime
    }
}

artifacts {
//    archives deployGMSInt
}

